name: build-userjava

env:
  apiname: user-java
  repo: devopsoh/api-user-java
  acrreg: openhacklnc1acr
  acrsite: openhacklnc1acr.azurecr.io
  tenant: ${{ secrets.tenant }}
  RG: openhacklnc1rg
  AZURE_WEBAPP_NAME: openhacklnc1userjava   # set this to your application's name

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths: 
      - apis/user-java/**  
      - .github/workflows/userjava-build.yml
  pull_request:
    branches: [ master ]
    paths: 
      - apis/user-java/**
      - .github/workflows/userjava-build.yml



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_test_java:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Configures Docker actions to use buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3.0.11
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{env.apiname}}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{env.apiname}}-


      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.CR_PAT }}

      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{env.acrsite}}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

# look at https://github.com/metcalfc/docker-action-examples/blob/main/.github/workflows/pr-ci.yml


      - name: Build user-java app and run test
        id: userjava_docker_buildtest
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: |
            ${{env.acrsite}}/${{env.repo}}-test:${{ github.run_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          file: apis/${{env.apiname}}/Dockerfile
          context: apis/${{env.apiname}}
          target: test
      
 
      - name: create issue if build & test failed
        if: failure()
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          title="${{ env.build_name }} Workflow ${{ github.run_number }} Failed! "
          body="${{ env.build_name }} Worflow Failure \
          Build Number: ${{ github.run_number }} \
          Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
          gh issue create --title "$title" --body "$body"


      - name: Build user-java app and push
        id: userjava_docker_buildpush
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{env.acrsite}}/${{env.repo}}:${{ github.run_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          file: apis/${{env.apiname}}/Dockerfile
          context: apis/${{env.apiname}}
          target: final
          # old tags: 
          # ghcr.io/${{ github.repository_owner }}/oh${{env.apiname}}:${{ github.run_number }}


  Deployjava:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test_java
    steps:     
    - uses: actions/checkout@v2

    - uses: azure/login@v1
      name: Azure Login
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 

### NOTE:  MUST add service principal as contributor to web app (or RG)

    - name: 'Deploy to Azure Web App for Container Staging Slot'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        images: ${{env.acrsite}}/${{env.repo}}:${{ github.run_number }}
        slot-name: staging
      

    - name: create issue if deploy fails
      if: failure()
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        title="${{ env.apiname }} Workflow ${{ github.run_number }} Failed! "
        body="${{ env.apiname }} Workflow Failure  -- deploy
        Build Number: ${{ github.run_number }} 
        Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} 
        SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
        gh issue create --title "$title" --body "$body"       

    - name: Swap Slots
      run: |
        az webapp deployment slot swap -g ${{env.RG}} -n ${{ env.AZURE_WEBAPP_NAME }} \
             --slot staging  --target-slot production




   